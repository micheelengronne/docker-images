name: Docker release

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  push_to_registry:
    name: Push Docker images to Github
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    strategy:
      matrix:
        image: [jool, wireguard]
        platform: [amd64, arm64]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch,suffix=-${{ matrix.platform }}
            type=ref,event=pr,suffix=-${{ matrix.platform }}
            type=semver,pattern={{version}},suffix=-${{ matrix.platform }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.platform }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          build-args: |
            VENDOR=${{ github.repository_owner }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ github.sha }}
            TARGETPLATFORM=${{ matrix.platform }}
          labels: |
            org.opencontainers.image.title=webhook-dnsendpoint
            org.opencontainers.image.url=https://ghcr.io/${{ github.repository_owner }}/images/webhook-dnsendpoint
            org.opencontainers.image.version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          context: .
          file: ${{ matrix.image }}/Dockerfile
          platforms: linux/${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
